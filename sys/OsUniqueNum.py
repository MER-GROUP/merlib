'''
Получаем уникальный номер для ОС какого либо устройства

Наименование алгоритма - Уникальный статический номер устройства

История создания - ничего подобного в интернете не нашел,
    пришлось выдумывать даный алгоритм.

Алгоритм получения уникального номера ОС какого либо устройства
    Создается 15 или n пустых функций.
    Извлекаются номера ссылок функций на память устройства (hdd, usd и тд.)
    Из номеров берутся 3 последние цифы (они постоянны и неизменны)
    Возвращается объединенное значение номеров ссылок - уникальный номер.

Суть алгоритма
    Файл с данным кодом записывается на устройство хранения информации.
    В зависимости от расположения данного файла будет формироваться 
        постоянный статический уникальный номер
    Если данный файл записан в начале устройство хранения информации
        то будет номер ххх..ххх если в середине то ууу..ууу 
        если в каком то другом интервале то и номер будет nnn..nnn
    Уникальный статический постоянный номер зависит от расположения 
        данного файла с данным алгоритмом.

Автор алгоритма - Максим Романенко (Red Alert) - 08-09.042022г.

Лицезия - MIT

Реализация алгоритма - Максим Романенко (Red Alert) - 2022г.
'''
# *****************************************************************************************
# используются стандартные модули
# *****************************************************************************************
# 15 пустых функций для извлечение номера ссылки памяти из
# устройства хранения данных (hdd, usb и тд)
def Memory1():
    pass
def Memory2():
    pass
def Memory3():
    pass
def Memory4():
    pass
def Memory5():
    pass
def Memory6():
    pass
def Memory7():
    pass
def Memory8():
    pass
def Memory9():
    pass
def Memory10():
    pass
def Memory11():
    pass
def Memory12():
    pass
def Memory13():
    pass
def Memory14():
    pass
def Memory15():
    pass
# *****************************************************************************************
# класс - получает уникальный номер для ОС какого либо устройства
class OsUniqueNum:
    '''
    class OsUniqueNum - получает уникальный номер для ОС какого либо устройства   
    методы:                                                  
        unique_num_get() -> str                                 
    '''
    # ---------------------------------------------------------------------------
    # конструктор создан для тестов извлечения уникальных номеров ссылок памяти 
    # из устройства хранения данных (hdd, usb и тд)
    def __init__(self) -> None:
        # self.unique_num_get()
        pass
    # ---------------------------------------------------------------------------
    # метод - получает уникальный номер для ОС какого либо устройства
    def unique_num_get(self) -> str:
        '''
        unique_num_get() -> str                                 
                возвращает уникальный номер для ОС какого либо устройства              
                возвращаемое значение - str (текстовая строка) 
        '''
        # записываем в переменную номер ссылки памяти из
        # устройства хранения данных (hdd, usb и тд)
        memory = list()
        memory.append(str(Memory1)[-4 : -1])
        memory.append(str(Memory2)[-4 : -1])
        memory.append(str(Memory3)[-4 : -1])
        memory.append(str(Memory4)[-4 : -1])
        memory.append(str(Memory5)[-4 : -1])
        memory.append(str(Memory6)[-4 : -1])
        memory.append(str(Memory7)[-4 : -1])
        memory.append(str(Memory8)[-4 : -1])
        memory.append(str(Memory9)[-4 : -1])
        memory.append(str(Memory10)[-4 : -1])
        memory.append(str(Memory11)[-4 : -1])
        memory.append(str(Memory12)[-4 : -1])
        memory.append(str(Memory13)[-4 : -1])
        memory.append(str(Memory14)[-4 : -1])
        memory.append(str(Memory15)[-4 : -1])
        # вывод в консоль уникальных номеров ссылок
        # print(*memory, sep='\n')

        # переменная - уникальный номер
        unique_num = ''.join(map(str, memory))
        # вывод в консоль общего уникального номера
        # print(unique_num)

        # возвращаем
        return unique_num
    # ---------------------------------------------------------------------------
# *****************************************************************************************
# тест
# если не модуль, то выполнить
if __name__ == '__main__':
    print('--------------------получаем уникальный номер ОС устройства--------------------')
    # получаем уникальный номер ОС устройства
    unique_num = OsUniqueNum().unique_num_get()
    # вывод в консоль уникального номера ОС устройства
    print('Уникальный номер ОС:', unique_num)
    # вывод дукументации класса
    print(OsUniqueNum.__doc__)
    # вывод дукументации метода
    print(OsUniqueNum().unique_num_get.__doc__)
# *****************************************************************************************